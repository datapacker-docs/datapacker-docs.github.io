import{_ as e,c as t,o as a,U as o}from"./chunks/framework.apcyylA1.js";const b=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"en/index.md","filePath":"en/index.md"}'),s={name:"en/index.md"},i=o('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>Welcome to the documentation of <a href="https://github.com/Sr-Kaio/Datapacker-plus-plus" target="_blank" rel="noreferrer">Datapacker++</a>, since you&#39;re here you obviously wan&#39;t to start using it, so i&#39;ll go hover the <strong>Prerequisites</strong>.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Datapacker++ is still in the works, so i&#39;ve decided that while the features are being added in, i&#39;ll document them here so when the Datapacker releases you&#39;ll already know on how to use it. <strong>Beaware that because of this the documentation may have frequent changes</strong>.</p></div><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>i recommend you having a <strong>basic understanding of how datapacks work</strong> to troubleshoot any errors Datapacker++ does,</p><p>you wan&#39;t to have really basic knowledge of <a href="https://lua.org/" target="_blank" rel="noreferrer">LUA</a> syntax for using the Datapacker LUA API,</p><p>it&#39;s necessary you have a 64-bit system since Datapacker dosen&#39;t support 32-bit.</p><p>Here&#39;s all that in a list:</p><ul><li>64-bit system</li><li>Basic lua syntax knowledge</li><li>Basic datapack knowledge</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>32-bit systems could be supported in the future.</p></div><h2 id="boxes" tabindex="-1">Boxes <a class="header-anchor" href="#boxes" aria-label="Permalink to &quot;Boxes&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>Tip</strong> boxes will contain useful features or hints.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>Warning</strong> boxes will contain warning, or features that you should be extra careful about.</p></div><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p><strong>Danger</strong> boxes will contain warnings to pay close attention to, or features that you should be EXTREMELY careful about.</p></div><h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;Code&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--Im a cute lil box that contains code :3</span></span></code></pre></div><h2 id="closing-up" tabindex="-1">Closing up <a class="header-anchor" href="#closing-up" aria-label="Permalink to &quot;Closing up&quot;">​</a></h2><p>Now that i got hover <strong>basic information</strong> about the documentation, you can feel free to go onto the <strong>Getting Started</strong> section.</p>',18),n=[i];function r(l,c,u,d,h,p){return a(),t("div",null,n)}const m=e(s,[["render",r]]);export{b as __pageData,m as default};
